{"version":3,"sources":["assets/scripts/Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","runJumpAction","jumpUp","tween","by","y","easing","jumpDown","sequence","call","playJumpSound","repeatForever","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onTouchMove","self","touches","getTouches","oldPos","node","parent","convertToNodeSpaceAR","getStartLocation","newPos","getLocation","subPos","sub","x","nodePos","minX","width","maxX","Math","abs","minY","height","maxY","nPos","getPosition","setPosition","onTouchEnd","onTouchCancel","onLoad","jumpAction","then","start","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","Node","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","onDestroy","off","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n    runJumpAction: function () {\n\n        // 跳跃上升\n        var jumpUp = cc.tween().by(this.jumpDuration, { y: this.jumpHeight }, { easing: 'sineOut' });\n\n        // 下落\n        var jumpDown = cc.tween().by(this.jumpDuration, { y: -this.jumpHeight }, { easing: 'sineIn' });\n\n        // 创建一个缓动\n        var tween = cc.tween()\n                        // 按 jumpUp，jumpDown 的顺序执行动作\n                        .sequence(jumpUp, jumpDown)\n                        // 添加一个回调函数，在前面的动作都结束时调用我们定义的 playJumpSound() 方法\n                        .call(this.playJumpSound, this);\n\n        // 不断重复\n        return cc.tween().repeatForever(tween);\n    },\n\n    playJumpSound: function () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n\n\n    \n \n    //触摸移动；\n    onTouchMove (event) {\n        var self = this;\n        var touches = event.getTouches();\n        //触摸刚开始的位置\n        var oldPos = self.node.parent.convertToNodeSpaceAR(touches[0].getStartLocation());\n        //触摸时不断变更的位置\n        var newPos = self.node.parent.convertToNodeSpaceAR(touches[0].getLocation());\n        \n        //var subPos = cc.pSub(oldPos,newPos); 1.X版本是cc.pSub\n \n        var subPos = oldPos.sub(newPos); // 2.X版本是 p1.sub(p2);\n \n        self.node.x = self.nodePos.x - subPos.x;\n        self.node.y = self.nodePos.y - subPos.y;\n        \n        // 控制节点移不出屏幕; \n        var minX = -self.node.parent.width/2 + self.node.width/2; //最小X坐标；\n        var maxX = Math.abs(minX);\n        var minY = -self.node.parent.height/2 + self.node.height/2; //最小Y坐标；\n        var maxY = Math.abs(minY);\n        var nPos = self.node.getPosition(); //节点实时坐标；\n \n        if (nPos.x < minX) {\n            nPos.x = minX;\n        };\n        if (nPos.x > maxX) {\n            nPos.x = maxX;\n        };\n        if (nPos.y < minY) {\n            nPos.y = minY;\n        };\n        if (nPos.y > maxY) {\n            nPos.y = maxY;\n        };\n        self.node.setPosition(nPos);\n    },\n\n    onTouchEnd () {\n        this.nodePos = this.node.getPosition(); //获取触摸结束之后的node坐标；\n    },\n\n    onTouchCancel: function () {\n        this.nodePos = this.node.getPosition(); //获取触摸结束之后的node坐标；\n    },\n\n    // this.node 是需要移动的节点\n    onLoad: function() {\n        // 初始化跳跃动作\n        var jumpAction = this.runJumpAction();\n        cc.tween(this.node).then(jumpAction).start()\n\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \n        \n        \t\t//节点初始位置,每次触摸结束更新\n                this.nodePos = this.node.getPosition();\n                //触摸监听(this.node.parent是屏幕)\n                //想达到按住节点，节点才能移动的效果，将监听函数注册到 this.node 上，去掉  .parent 即可\n                this.node.parent.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n                this.node.parent.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n                this.node.parent.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\n    },\n\n    onDestroy () {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },    \n\n    update: function (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n});\n\n\n"]}